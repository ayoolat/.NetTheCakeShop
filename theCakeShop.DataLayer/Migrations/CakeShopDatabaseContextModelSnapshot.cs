// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using theCakeShop.DataLayer.Database;

#nullable disable

namespace theCakeShop.DataLayer.Migrations
{
    [DbContext(typeof(CakeShopDatabaseContext))]
    partial class CakeShopDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-rc.2.22472.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("theCakeShop.DataLayer.Database.Cake", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("cakes_pkey");

                    b.ToTable("cakes", (string)null);
                });

            modelBuilder.Entity("theCakeShop.DataLayer.Database.Cart", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<int>("CakeId")
                        .HasColumnType("integer")
                        .HasColumnName("cake_id");

                    b.Property<bool?>("Delivered")
                        .HasColumnType("boolean")
                        .HasColumnName("delivered");

                    b.Property<bool?>("Paid")
                        .HasColumnType("boolean")
                        .HasColumnName("paid");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("integer")
                        .HasColumnName("user_profile_id");

                    b.HasKey("Id")
                        .HasName("cart_pkey");

                    b.ToTable("cart", (string)null);
                });

            modelBuilder.Entity("theCakeShop.DataLayer.Database.User", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("last_name");

                    b.Property<string>("UserId")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("users_pkey");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("theCakeShop.DataLayer.Database.Cart", b =>
                {
                    b.HasOne("theCakeShop.DataLayer.Database.Cake", "IdNavigation")
                        .WithOne("Cart")
                        .HasForeignKey("theCakeShop.DataLayer.Database.Cart", "Id")
                        .IsRequired()
                        .HasConstraintName("cakes_orders_fk");

                    b.HasOne("theCakeShop.DataLayer.Database.User", "Id1")
                        .WithOne("Cart")
                        .HasForeignKey("theCakeShop.DataLayer.Database.Cart", "Id")
                        .IsRequired()
                        .HasConstraintName("users_orders_fk");

                    b.Navigation("Id1");

                    b.Navigation("IdNavigation");
                });

            modelBuilder.Entity("theCakeShop.DataLayer.Database.Cake", b =>
                {
                    b.Navigation("Cart");
                });

            modelBuilder.Entity("theCakeShop.DataLayer.Database.User", b =>
                {
                    b.Navigation("Cart");
                });
#pragma warning restore 612, 618
        }
    }
}
